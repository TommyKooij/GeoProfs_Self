@page
@model GeoProfs.Pages.Employees.IndexModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Employees";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@if(SignInManager.IsSignedIn(User))
{
    <h1>Employees</h1>

    @if(User.IsInRole("Admin"))
    {
        <p>
            <a asp-page="Create">Create New Employee</a>
        </p>
    }

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

@*show absence amount here for managers*@

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.FirstNameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Employees[0].FirstMidName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.LastNameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Employees[0].LastName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Employees[0].EnrollmentDate)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.RoleSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Employees[0].Role)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TeamSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Employees[0].Team)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employees[0].Mail)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.IsPresentSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Employees[0].IsPresent)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employees[0].AbsenceDaysLeft)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Employees) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Team)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPresent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AbsenceDaysLeft)
            </td>
                    <td>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a>
                        }
                        <a asp-page="./Details" asp-route-id="@item.ID">Details</a>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                        }
                    </td>
        </tr>
}
    </tbody>
</table>
}

@{
    var prevDisabled = !Model.Employees.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Employees.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Employees.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Employees.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
